************************************************************************
1. Reverse The Array 
*************************************************************************
import java.util.ArrayList;

public class Solution 
{
    public static void reverseArray(ArrayList<Integer> arr, int m)
    {
        int low=m+1;
        int high=arr.size()-1;
        while(low<high)
        {
            int temp=arr.get(low);
            arr.set(low,arr.get(high));
            arr.set(high,temp);
            low++;
            high--;
            
        }
    }
}
**************************************************************************
2.Sum Of Max And Min
**************************************************************************

import java.util.*;
public class Solution {
  public static int sumOfMaxMin(int[] arr, int n) {
     /* Arrays.sort(arr);
      
      return arr[0]+arr[arr.length-1];
     */
      int min=arr[0];
      int max=arr[0];
      for(int i=0;i<arr.length;i++)
      {
          if(max<arr[i])
              max=arr[i];
          if(min>arr[i])
          {
              min=arr[i];
          }
      }
     // System.out.println(max+" "+min);
      return max+min;
  }
}
***************************************************************************
3. Kth Smallest and Largest Element of Array 
***************************************************************************
import java.util.*;
public class Solution {
	public static ArrayList<Integer> kthSmallLarge(ArrayList<Integer> arr, int n, int k) {
		Collections.sort(arr);
        ArrayList<Integer> ans =
        new ArrayList<Integer>(2);
        ans.add(arr.get(k-1));
        ans.add(arr.get(n-k));
        
        return ans;
        
	}
}
*****************************************************************************
4.Sort 0 1 2
*****************************************************************************
import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
        int low=0;
        int mid=0;
        int high=arr.length-1;
        int temp=0;
        while(mid<=high)
        {
            if(arr[mid]==0)
            {
                temp=arr[low];
                arr[low]=arr[mid];
                arr[mid]=temp;
                mid++;
                low++;
                
            }
            else if(arr[mid]==1)
            {
                mid++;
            }
            else{
                temp=arr[mid];
                arr[mid]=arr[high];
                arr[high]=temp;
                high--;
                
            }
        }
    }
}
********************************************************************************
5. Move All Negative Numbers To Beginning And Positive To End 
********************************************************************************
import java.util.*;
public class Solution {
    public static ArrayList<Integer> separateNegativeAndPositive(ArrayList<Integer> nums) {
       int low=0;
        int high=nums.size()-1;
        
        while(low<high)
        {
            if(nums.get(high)>0)
            {
                high--;
            }
            else if(nums.get(low)<0)
            {
                low++;
            }
            else
            {
                int temp=nums.get(low);
                nums.set(low,nums.get(high));
                nums.set(high,temp);
                
                
             }
        }
        return nums;
    }
}
***********************************************************************************************
6. Rotate the array k times.
***********************************************************************************************
import java.util.*;
class Solution {
	
	public static void main(String args[]) {
		
		Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        int k=sc.nextInt();
        for(int j=0;j<k;j++)
        {
        int low=arr[0];
        for(int i=0;i<n-1;i++)
        {
            
            arr[i]=arr[i+1];
            
        }
        arr[n-1]=low;
          }
        for(int i=0;i<n;i++)
        { System.out.print(arr[i]+" ");}
       	
	}
}

***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************

public static int findDuplicate(ArrayList<Integer> arr) {

	   int temp[]=new int[arr.size()+1];
        for(int i=0;i<arr.size();i++)
        {
            if(temp[arr.get(i)]==0)
            temp[arr.get(i)]++;
            else
                return arr.get(i);
        }
      return 0;  
	}
***********************************************************************************************
8.Pair Sum
***********************************************************************************************
public class Solution {
    public static int pairSum(int arr[], int n, int target) {
        // Write your code here.
        int count=0;
        int low=0;
        int high=n-1;
       while(low<high)
       {
           if(arr[low]+arr[high]>target)
           {
               high--;
           }
           else if (arr[low]+arr[high]<target)
           {
               low++;
           }
           else 
           {
               count++;
               low++;
               high--;
           }
           
       }
        if(count==0)
            return -1;
        return count;
    }
}
***********************************************************************************************
9. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
10. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
11. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
12. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
13.Value Equal To The Index Value 
***********************************************************************************************
public class Solution {
    public static ArrayList<Integer> valueEqualToIndices(int numArray[], int n) {
        int count=0;
        ArrayList<Integer> arr=new ArrayList<Integer>();
        for(int i=0;i<n;i++)
        {
            if(numArray[i]==i)
                arr.add(i);
            
        }
        if(arr.size()==0)
        {
            arr.add(-1);
        }
       return arr;
    }
}
***********************************************************************************************
14.Find The Repeating And Missing Number 
***********************************************************************************************
 public static int[] findRepeatingAndMissingNumbers(int[] nums) 
    {
        int repeat=0;
        int sum=0;
        int arr[]=new int[nums.length+1];
    	for(int i=0;i<nums.length;i++)
        { sum+=nums[i];
            if(arr[nums[i]]==0)
            {
                arr[nums[i]]++;
            }
            else
                repeat= nums[i];
        }
        int num=(nums.length*(nums.length+1)/2);
        int ans=num-(sum-repeat);
        
        return new int[]{repeat,ans};  
    }
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************
***********************************************************************************************
7. Duplicate In Array.
***********************************************************************************************

